{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GAChB,OACA,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,Q,IAIHC,E,kKACF,SAAaC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAM1C,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA3BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CACP,CACAN,QAAUO,MAAM,GAAGC,KAAK,QAG1BC,WAAa,EACbC,SAAU,GATI,E,+CAalB,SAAYZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAEZ,KAAKM,MAAMI,WAAa,GAE7DT,EADUM,EAAQA,EAAQM,OAAO,GACfZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKe,SAAS,CACZR,QAAUA,EAAQS,OAAO,CAAC,CACxBf,QAASA,KAEXS,WAAaH,EAAQM,OACrBF,SAAWX,KAAKM,MAAMK,a,oBAI1B,SAAOM,GACLjB,KAAKe,SAAS,CACZL,WAAaO,EACbN,QAAUM,EAAO,IAAO,M,oBAI5B,WAAU,IAiBJC,EAjBG,OACDX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAKM,GAC9B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACE,6BACE,wBAAQ3B,QAAS,kBAAK,EAAK6B,OAAOF,IAAlC,SAA0CC,KADnCD,MAab,OAJEL,EADEE,EACO,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMK,QAAU,IAAM,KAGvD,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACAG,QAASkB,EAAQlB,QACjBL,QAAS,SAAAG,GAAC,OAAI,EAAK2B,YAAY3B,QAGjC,sBAAKJ,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GAxEIlB,IAAMC,WAsFzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMd,OAAQd,IAAK,CACrC,kBAAkB4B,EAAM5B,GAAxB,GAAO6B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.de944efc.chunk.js","sourcesContent":["import React from 'react';\r\nimport  ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\nreturn (\r\n<button className=\"square\" onClick={props.onClick}>\r\n    {props.value}\r\n</button>)\r\n}\r\n  \r\n  class Board extends React.Component {    \r\n      renderSquare(i) {\r\n        return (\r\n          <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n          />\r\n        );\r\n      }\r\n    \r\n  \r\n    render() {  \r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        history: [\r\n          {\r\n          squares : Array(9).fill(null),\r\n        }\r\n      ],\r\n        stepNumber : 0,\r\n        xIsNext : true\r\n      };\r\n    }\r\n\r\n    handleClick(i) {\r\n      const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n      const current = history[history.length-1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]){\r\n          return;\r\n      }\r\n\r\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n      this.setState({\r\n        history : history.concat([{\r\n          squares: squares\r\n        }]),\r\n        stepNumber : history.length,\r\n        xIsNext : !this.state.xIsNext\r\n      });\r\n    }\r\n\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber : step,\r\n        xIsNext: (step % 2) === 0\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      const moves = history.map((step,move) => {\r\n        const desc = move ?\r\n        'Go To Move #' + move :\r\n        'Go To game start';\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={()=> this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n\r\n\r\n      let status;\r\n      if (winner){\r\n        status = 'Winner: ' + winner;\r\n      } else{\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }"],"sourceRoot":""}